name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          cache: true
          check-latest: true

      - name: Build
        run: go build -v ./...

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          cache: true
          check-latest: true

      - name: Run tests
        run: make test

      - name: Run coverage
        run: make coverage

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Golang Linter
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          version: v1.43

  docker-push:
    name: Build and push docker image to docker hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build, code-coverage, lint]
    steps:
      - uses: actions/checkout@v2

      - name: Login to docker hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker(tags, labels) from Docker
        id: meta
        uses: docker/metadata-action@master
        with:
          images: bilginyuksel/gotemplate

      - name: Build and push docker image
        uses: docker/build-push-action@master
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deployment:
    name: Deploy application to Kubernetes
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [docker-push]
    environment: prod
    steps:
      - name: Deploy the production
        run: echo "Deploy"
